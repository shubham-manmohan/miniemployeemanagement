/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package empmgmt.gui;

import empmgmt.dao.EmpDAO;
import empmgmt.dbutil.DBConnection;
import empmgmt.pojo.Employee;
import java.sql.SQLException;
import javax.swing.JOptionPane;
 
/**
 *
 * @author abc
 */
public class UpdateDeleteEmployeeFrame extends javax.swing.JFrame {

    /**
     * Creates new form UpdateEmployeeFrame
     */
    public UpdateDeleteEmployeeFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUpdateEmp = new javax.swing.JPanel();
        lblUpdate = new javax.swing.JLabel();
        lblEmpNo = new javax.swing.JLabel();
        lblEmpName = new javax.swing.JLabel();
        lblSalary = new javax.swing.JLabel();
        txtEmpNo = new javax.swing.JTextField();
        txtEmpName = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        btnUpdateEmp = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panelUpdateEmp.setBackground(new java.awt.Color(51, 51, 0));

        lblUpdate.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblUpdate.setForeground(new java.awt.Color(153, 153, 255));
        lblUpdate.setText("UPDATE EMPLOYEE");

        lblEmpNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEmpNo.setForeground(new java.awt.Color(0, 153, 153));
        lblEmpNo.setText("EmpNo");

        lblEmpName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEmpName.setForeground(new java.awt.Color(0, 153, 153));
        lblEmpName.setText("EmpName");

        lblSalary.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSalary.setForeground(new java.awt.Color(0, 153, 153));
        lblSalary.setText("Salary");

        txtEmpNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpNoActionPerformed(evt);
            }
        });

        txtEmpName.setEditable(false);

        txtSalary.setEditable(false);

        btnUpdateEmp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdateEmp.setForeground(new java.awt.Color(204, 102, 0));
        btnUpdateEmp.setText("Update Emp");
        btnUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmpActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(204, 102, 0));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(204, 102, 0));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdateEmpLayout = new javax.swing.GroupLayout(panelUpdateEmp);
        panelUpdateEmp.setLayout(panelUpdateEmpLayout);
        panelUpdateEmpLayout.setHorizontalGroup(
            panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateEmpLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(lblUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelUpdateEmpLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdateEmpLayout.createSequentialGroup()
                        .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmpNo)
                            .addComponent(lblEmpName)
                            .addComponent(lblSalary))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSalary, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtEmpName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmpNo, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(panelUpdateEmpLayout.createSequentialGroup()
                        .addComponent(btnUpdateEmp)
                        .addGap(27, 27, 27)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        panelUpdateEmpLayout.setVerticalGroup(
            panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUpdate)
                .addGap(34, 34, 34)
                .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpNo)
                    .addComponent(txtEmpNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpName)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSalary)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(panelUpdateEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdateEmp)
                    .addComponent(btnBack))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelUpdateEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelUpdateEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
     OptionsFrame optionFrame=new OptionsFrame();
     optionFrame.setVisible(true);
     this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtEmpNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpNoActionPerformed
        String empNo=txtEmpNo.getText();
        if(empNo==null)
        {
        JOptionPane.showMessageDialog(null, "Please Fill Employee Number!!!", "Input Error!!!",JOptionPane.ERROR_MESSAGE);
        txtEmpNo.requestFocus();
        }
        else 
        {
            try{
            Employee e=EmpDAO.findEmployeeById(Integer.parseInt(empNo));
            if(e==null){
            JOptionPane.showMessageDialog(null, "EMPLOYEE NOT FOUND!!!","Not Found Error!!!!",JOptionPane.ERROR_MESSAGE);
            txtEmpNo.setText("");
            txtEmpName.setText("");
            txtSalary.setText("");
            txtEmpNo.requestFocus();
            }
            else {
            txtEmpName.setText(e.getEmpName());
            txtEmpName.setEditable(true);
            txtSalary.setText(String.valueOf(e.getSal()));
            txtSalary.setEditable(true);
            }
            }
            catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please fill Proper Input!!!");
            }
            catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Cannot Connect to DB!!!","DB Error!!!",JOptionPane.ERROR_MESSAGE ) ;
            }
            
        }
    }//GEN-LAST:event_txtEmpNoActionPerformed

    private void btnUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmpActionPerformed
     if(txtEmpNo.getText().isEmpty()){
     JOptionPane.showMessageDialog(null, "Please Enter Employee Number!!!","Input Required!!!",JOptionPane.ERROR_MESSAGE);
     txtEmpNo.requestFocus();
     return;
     }
     try{
         String empN=txtEmpNo.getText();
         Employee m=EmpDAO.findEmployeeById(Integer.parseInt(empN));
            if(m==null){
            JOptionPane.showMessageDialog(null, "EMPLOYEE NOT FOUND!!!","Not Found Error!!!!",JOptionPane.ERROR_MESSAGE);
            txtEmpNo.setText("");
            txtEmpName.setText("");
            txtSalary.setText("");
            txtEmpName.setEditable(false);
            txtSalary.setEditable(false);
            txtEmpNo.requestFocus();
            return;
            }
     boolean response=validateInput();
     if(response==false){
     JOptionPane.showMessageDialog(null, "Please Fill All Input!!!","Input Error!!!",JOptionPane.ERROR_MESSAGE);
     return;
     }
     Employee e=new Employee();
     int empNo=Integer.parseInt(txtEmpNo.getText());
     String empName=txtEmpName.getText();
     double empSal=Double.parseDouble(txtSalary.getText());
     e.setEmpName(empName);
     e.setEmpNo(empNo);
     e.setSal(empSal);
     boolean result=EmpDAO.updateEmployee(e);
     if(result){
     JOptionPane.showMessageDialog(null,"Record Updated Successflully!!","Success!!!",JOptionPane.INFORMATION_MESSAGE);
     }
     else
         JOptionPane.showMessageDialog(null, "Could not update record!!!","Error!!!",JOptionPane.ERROR_MESSAGE);
     }
     catch(NumberFormatException e){
     JOptionPane.showMessageDialog(null, "Please fill proper input!!!","Input Error!!!",JOptionPane.ERROR_MESSAGE);
     }
     
     catch(SQLException ex){
     JOptionPane.showMessageDialog(null, "Cannot Connect to database!!!","DB Error!!!",JOptionPane.ERROR_MESSAGE);
     ex.printStackTrace();
     }
     
    }//GEN-LAST:event_btnUpdateEmpActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
     try{
        int empNo=Integer.parseInt(txtEmpNo.getText());
     Employee e=new Employee(empNo,txtEmpName.getText(),Double.parseDouble(txtSalary.getText()));
     
     int a=JOptionPane.showConfirmDialog(null, "Are you sure to delete!!!", "Confirmation!!!", JOptionPane.YES_NO_OPTION);
     if(a==JOptionPane.YES_OPTION){
           EmpDAO.deleteEmployee(e);
           JOptionPane.showMessageDialog(null, "Successfully Delete !!!");
           txtEmpNo.setText(null);
           txtEmpName.setText(null);
           txtSalary.setText(null);
           txtEmpNo.requestFocus(true);
           txtEmpName.setEditable(false);
           txtSalary.setEditable(false);
     }
     
     }
     catch(NumberFormatException ex){
     JOptionPane.showMessageDialog(null, "Please fill valid input!!!");
     }
     catch(SQLException ex){
     JOptionPane.showMessageDialog(null, "Can't delete employee DB error!!!");
     ex.printStackTrace();
     }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
     DBConnection.closeConnection();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteEmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteEmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteEmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteEmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDeleteEmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdateEmp;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JLabel lblEmpNo;
    private javax.swing.JLabel lblSalary;
    private javax.swing.JLabel lblUpdate;
    private javax.swing.JPanel panelUpdateEmp;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtEmpNo;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables

  
    private boolean validateInput() {
    if(txtEmpName.getText().isEmpty()||txtSalary.getText().isEmpty()&&txtEmpNo.getText().isEmpty()==false)
         return false;
     return true;
    }
}
